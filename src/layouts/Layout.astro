---
interface Props {
	title: string;
}
import { Image } from "astro:assets";
import "../styles/global.css";
import LanguageSwitcher from "../components/LanguageSwitcher";
import Footer from "../components/Footer";
const { title } = Astro.props;

import "../styles/global.css";

---

<!doctype html>
<html lang={`fi`} class="light">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0, maximum-scale=5.0, viewport-fit=cover"
    />
    <meta
      name="description"
      content="Reaaliaikaiset lähtöajat Suomen lähijunille. Saat ajantasaista tietoa lähijunien aikatauluista ja laitureista."
    />
    <meta
      name="keywords"
      content="lähijunat, paikallisjunat, suomen junat, helsingin junat, juna-aikataulut, reaaliaikaiset junat"
    />
    <meta name="author" content="Lähijunat Live" />
    <meta name="robots" content="index, follow" />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta
      property="og:description"
      content="Reaaliaikaiset lähtöajat Suomen lähijunille"
    />
    <meta property="og:site_name" content="Lähijunat Live" />
    <meta
      property="og:url"
      content={new URL(Astro.url.pathname, Astro.site).toString()}
    />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta
      property="og:image"
      content={new URL("/Juna-meta-header.png", Astro.site).toString()}
    />
    <meta property="og:image:alt" content="Lähijunat Live logo" />
    <meta property="og:locale" content="fi_FI" />

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta
      name="twitter:description"
      content="Reaaliaikaiset lähtöajat Suomen lähijunille"
    />
    <meta name="twitter:image:width" content="1200" />
    <meta name="twitter:image:height" content="600" />
    <meta
      name="twitter:image"
      content={new URL("/Juna-twitter-header.png", Astro.site).toString()}
    />
    <meta name="twitter:image:alt" content="Lähijunat Live logo" />

    <!-- Favicon -->
    <link rel="icon" type="image/png" href="/Juna.png" />

    <!-- iOS meta tags -->
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta
      name="apple-mobile-web-app-status-bar-style"
      content="black-translucent"
    />
    <meta name="apple-mobile-web-app-title" content={title} />
    <link rel="apple-touch-icon" href="/Juna.png" />

    <!-- Android meta tags -->
    <meta name="mobile-web-app-capable" content="yes" />
    <meta name="theme-color" content="#8c4799" />
    <link rel="manifest" href="/manifest.json" />
    <link
      rel="canonical"
      href={new URL(Astro.url.pathname, Astro.site).toString()}
    />

    <link
      rel="alternate"
      hreflang="fi"
      href={new URL(Astro.url.pathname, Astro.site).toString()}
    />

    <link
      rel="alternate"
      hreflang="en"
      href={new URL(`/en${Astro.url.pathname}`, Astro.site).toString()}
    />

    <title>{title}</title>

    <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "WebApplication",
        "name": "Lähijunat Live",
        "description": "Reaaliaikaiset lähtöajat Suomen lähijunille",
        "url": "https://www.lahijunat.live",
        "applicationCategory": "Transportation",
        "operatingSystem": "Any",
        "inLanguage": "fi-FI",
        "author": {
          "@type": "Person",
          "name": "Niko Salonen",

          "url": "https://bsky.app/profile/niko.torttu.fi",
          "sameAs": [
            "https://bsky.app/profile/niko.torttu.fi",
            "https://github.com/nikosalonen",
            "https://www.linkedin.com/in/nikosalonen/"
          ]
        }
      }
    </script>

    <script is:inline>
      // Check for saved theme preference or use system preference
      const theme = (() => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          return "dark";
        }
        // Default to light theme if no preference is set
        return "light";
      })();

      // Apply theme immediately to prevent flash
      if (theme === "dark") {
        document.documentElement.classList.remove("light");
        document.documentElement.classList.add("dark");
      } else {
        document.documentElement.classList.remove("dark");
        document.documentElement.classList.add("light");
      }
    </script>
    <script
      src="https://cdn.counter.dev/script.js"
      data-id="da3ed73f-eedb-4dd0-acac-8e7366f8508e"
      data-utcoffset="2"></script>
    <script>
      import { registerSWUpdateHandler } from "../utils/swUpdate";
      registerSWUpdateHandler();
    </script>
  </head>
  <body
    class="min-h-screen bg-gradient-to-b from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800"
  >
    <div class="min-h-screen flex flex-col">
      <nav class="py-4 bg-[#8c4799] w-full">
        <div class="container mx-auto px-4">
          <div class="flex flex-row items-center justify-between gap-4">
            <a
              href="/"
              class="text-2xl font-bold text-white hover:text-blue-100 transition-colors"
            >
              <div class="flex items-center gap-2">
                <Image
                  width={32}
                  height={32}
                  src="/Juna.png"
                  alt="Lähijunat Live"
                  class="h-8"
                  fetchpriority="high"
                  loading="eager"
                />
                <span>Lähijunat Live</span>
              </div>
            </a>
            <div class="flex items-center gap-4">
              <LanguageSwitcher client:load />
              <button
                id="theme-toggle"
                type="button"
                class="text-white hover:text-blue-100 transition-colors"
                aria-label="Toggle theme"
              >
                <svg
                  id="theme-toggle-dark-icon"
                  class="w-6 h-6 hidden"
                  fill="currentColor"
                  viewBox="0 0 20 20"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
                  ></path>
                </svg>
                <svg
                  id="theme-toggle-light-icon"
                  class="w-6 h-6 hidden"
                  fill="currentColor"
                  viewBox="0 0 20 20"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
                  ></path>
                </svg>
              </button>
            </div>
          </div>
        </div>
      </nav>
      <div class="container mx-auto px-4 flex-grow">
        <main>
          <slot />
        </main>
      </div>
      <Footer client:load />
    </div>

    <script>
      const themeToggleDarkIcon = document.getElementById(
        "theme-toggle-dark-icon"
      );
      const themeToggleLightIcon = document.getElementById(
        "theme-toggle-light-icon"
      );
      const themeToggleBtn = document.getElementById("theme-toggle");

      // Change the icons inside the button based on previous settings
      if (
        localStorage.getItem("theme") === "dark" ||
        (!localStorage.getItem("theme") &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        themeToggleLightIcon?.classList.remove("hidden");
      } else {
        themeToggleDarkIcon?.classList.remove("hidden");
      }

      themeToggleBtn?.addEventListener("click", function () {
        // Toggle icons
        themeToggleDarkIcon?.classList.toggle("hidden");
        themeToggleLightIcon?.classList.toggle("hidden");

        // If is dark mode
        if (document.documentElement.classList.contains("dark")) {
          document.documentElement.classList.remove("dark");
          document.documentElement.classList.add("light");
          localStorage.setItem("theme", "light");
        } else {
          document.documentElement.classList.remove("light");
          document.documentElement.classList.add("dark");
          localStorage.setItem("theme", "dark");
        }
      });
    </script>
  </body>
</html>

<style is:global>
  :root {
    --font-fallback: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
      Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji";
    --font-body: "Gotham Rounded", var(--font-fallback);
  }

  html {
    font-family: var(--font-body);
    scroll-behavior: smooth;
  }

  /* iOS status bar fix */
  body {
    padding-top: env(safe-area-inset-top);
  }

  nav {
    padding-top: max(1rem, env(safe-area-inset-top));
    margin-top: calc(-1 * env(safe-area-inset-top));
    background-color: #8c4799;
  }
</style>
